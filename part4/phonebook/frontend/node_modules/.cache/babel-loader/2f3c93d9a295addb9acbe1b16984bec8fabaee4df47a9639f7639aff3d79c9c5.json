{"ast":null,"code":"var _jsxFileName = \"/Users/jamestang/Documents/GitHub/FSOSubRepo/part2/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Phonebook from './components/Phonebook';\nimport Humans from './components/Humans';\nimport axios from 'axios';\nimport peopleService from './services/peopleService';\nimport Notification from './services/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [filterAll, setFilterAll] = useState('');\n  const [filterPersons, setFilterPersons] = useState(persons);\n  const [notificationMessages, setNotificationMessages] = useState();\n  useEffect(() => {\n    //getAll() from src/services, axios HTTP GET request\n    peopleService.getAll().then(initialContact => {\n      console.log('promise fulfilled!');\n      setPersons(initialContact);\n      setFilterPersons(initialContact);\n    });\n  }, []);\n  const addPerson = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      phoneNumber: newPhoneNumber,\n      id: persons.length + 1\n    };\n\n    // Currently thinking of a way to not use a loop to check if this person has existed in this... persons list\n    // But filter is basically a loop lol\n\n    if (persons.filter(person => person.name === personObject.name).length > 0) {\n      if (window.confirm(\"Are you sure you want to update this person's phone number?\")) {\n        const personToChange = persons.find(person => person.name === personObject.name);\n\n        // This part feels weird... don't think I'm using proper javascript...\n        personToChange.phoneNumber = personObject.phoneNumber;\n        peopleService.update(personToChange.id, personToChange).then(promise => console.log(promise));\n        // setFilterPersons(persons.filter(person => person.id !== id))\n        setNotificationMessages(`${personObject.name} has been updated!`);\n        setTimeout(() => {\n          setNotificationMessages(null);\n        }, 5000);\n      }\n    } else {\n      // HTTP POST Request, its a promise request that contains 3 states (pending, fulfilled, failed)\n      peopleService.create(personObject).then(promise => console.log(promise));\n      setNotificationMessages(`${personObject.name} has been added to the phonebook!`);\n      setTimeout(() => {\n        setNotificationMessages(null);\n      }, 5000);\n    }\n  };\n  const handlePersonChange = event => {\n    event.preventDefault();\n    setNewName(event.target.value);\n  };\n  const handlePhoneChange = event => {\n    event.preventDefault();\n    setNewPhoneNumber(event.target.value);\n  };\n  const handleFilterChange = event => {\n    event.preventDefault();\n    setFilterAll(event.target.value);\n  };\n  const handleFilterSearch = event => {\n    event.preventDefault();\n    setFilterPersons(filterAll === \"\" ? persons : persons.filter(person => person.name.includes(filterAll)));\n  };\n  const handleDeleteChange = (event, id) => {\n    event.preventDefault();\n    if (window.confirm(\"Are you sure you want to delete this person?\")) {\n      peopleService.deleteUser(id).then(promise => console.log(promise));\n      setFilterPersons(persons.filter(person => person.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: notificationMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filterAll: filterAll,\n      handleFilterChange: handleFilterChange,\n      handleFilterSearch: handleFilterSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Phonebook, {\n      persons: persons,\n      addPerson: addPerson,\n      newName: newName,\n      newPhoneNumber: newPhoneNumber,\n      handlePersonChange: handlePersonChange,\n      handlePhoneChange: handlePhoneChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Humans, {\n      filterPersons: filterPersons,\n      handleDeleteChange: handleDeleteChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dbU7gm2r+iLI7GAGHqJCOmmMnNI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Filter","Phonebook","Humans","axios","peopleService","Notification","App","persons","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","filterAll","setFilterAll","filterPersons","setFilterPersons","notificationMessages","setNotificationMessages","getAll","then","initialContact","console","log","addPerson","event","preventDefault","personObject","name","phoneNumber","id","length","filter","person","window","confirm","personToChange","find","update","promise","setTimeout","create","handlePersonChange","target","value","handlePhoneChange","handleFilterChange","handleFilterSearch","includes","handleDeleteChange","deleteUser"],"sources":["/Users/jamestang/Documents/GitHub/FSOSubRepo/part2/phonebook/src/App.js"],"sourcesContent":["import { useState , useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Phonebook from './components/Phonebook'\nimport Humans from './components/Humans'\nimport axios from 'axios'\nimport peopleService from './services/peopleService'\nimport Notification from './services/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newPhoneNumber, setNewPhoneNumber] = useState('')\n  const [filterAll, setFilterAll] = useState('')\n  const [filterPersons, setFilterPersons] = useState(persons)\n  const [notificationMessages, setNotificationMessages] = useState()\n\n  useEffect(() => {\n    //getAll() from src/services, axios HTTP GET request\n    peopleService.getAll().then(initialContact => {\n      console.log('promise fulfilled!')\n      setPersons(initialContact)\n      setFilterPersons(initialContact)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      phoneNumber: newPhoneNumber,\n      id: persons.length + 1\n    }\n\n    // Currently thinking of a way to not use a loop to check if this person has existed in this... persons list\n    // But filter is basically a loop lol\n\n    if (persons.filter( person => person.name === personObject.name).length > 0 ){\n      if (window.confirm(\"Are you sure you want to update this person's phone number?\")){\n        const personToChange = persons.find( person => person.name === personObject.name)\n\n        // This part feels weird... don't think I'm using proper javascript...\n        personToChange.phoneNumber = personObject.phoneNumber\n        peopleService.update(personToChange.id, personToChange).then(promise => console.log(promise))\n        // setFilterPersons(persons.filter(person => person.id !== id))\n        setNotificationMessages(`${personObject.name} has been updated!`)\n        setTimeout(() => {\n          setNotificationMessages(null)\n        }, 5000)\n      }\n    }else{\n        // HTTP POST Request, its a promise request that contains 3 states (pending, fulfilled, failed)\n      peopleService.create(personObject).then(promise => console.log(promise))\n      setNotificationMessages(`${personObject.name} has been added to the phonebook!`)\n      setTimeout(() => {\n        setNotificationMessages(null)\n      }, 5000)\n    }\n\n  }\n\n  const handlePersonChange = (event) => {\n    event.preventDefault()\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    event.preventDefault()\n    setNewPhoneNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    event.preventDefault()\n    setFilterAll(event.target.value)\n  }\n\n  const handleFilterSearch = (event) => {\n    event.preventDefault()\n    setFilterPersons(filterAll === \"\" ? persons : persons.filter(person => person.name.includes(filterAll)))\n  }\n\n  const handleDeleteChange = (event, id) => {\n    event.preventDefault()\n    if (window.confirm(\"Are you sure you want to delete this person?\")) {\n      peopleService.deleteUser(id).then(promise => console.log(promise))\n      setFilterPersons(persons.filter(person => person.id !== id))\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessages} />\n\n      <Filter filterAll={filterAll}  handleFilterChange={handleFilterChange} handleFilterSearch={handleFilterSearch}/>\n\n      <h2>Add a Number</h2>\n\n      <Phonebook persons={persons} addPerson={addPerson} newName={newName} newPhoneNumber={newPhoneNumber} handlePersonChange={handlePersonChange} handlePhoneChange={handlePhoneChange} />\n\n      <h2>Numbers</h2>\n      {/* Mapping persons list to a new array of list that show each individual person*/}\n\n      <Humans filterPersons={filterPersons} handleDeleteChange={handleDeleteChange}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}